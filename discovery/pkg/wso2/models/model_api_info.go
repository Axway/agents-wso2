/*
 * WSO2 API Manager - Publisher API
 *
 * This document specifies a **RESTful API** for WSO2 **API Manager** - **Publisher**.  # Authentication Our REST APIs are protected using OAuth2 and access control is achieved through scopes. Before you start invoking the the API you need to obtain an access token with the required scopes. This guide will walk you through the steps that you will need to follow to obtain an access token. First you need to obtain the consumer key/secret key pair by calling the dynamic client registration (DCR) endpoint. You can add your preferred grant types in the payload. A Sample payload is shown below. ```   {   \"callbackUrl\":\"www.google.lk\",   \"clientName\":\"rest_api_publisher\",   \"owner\":\"admin\",   \"grantType\":\"client_credentials password refresh_token\",   \"saasApp\":true   } ``` Create a file (payload.json) with the above sample payload, and use the cURL shown bellow to invoke the DCR endpoint. Authorization header of this should contain the base64 encoded admin username and password. **Format of the request** ```   curl -X POST -H \"Authorization: Basic Base64(admin_username:admin_password)\" -H \"Content-Type: application/json\"   \\ -d @payload.json https://<host>:<servlet_port>/client-registration/v0.17/register ``` **Sample request** ```   curl -X POST -H \"Authorization: Basic YWRtaW46YWRtaW4=\" -H \"Content-Type: application/json\"   \\ -d @payload.json https://localhost:9443/client-registration/v0.17/register ``` Following is a sample response after invoking the above curl. ``` { \"clientId\": \"fOCi4vNJ59PpHucC2CAYfYuADdMa\", \"clientName\": \"rest_api_publisher\", \"callBackURL\": \"www.google.lk\", \"clientSecret\": \"a4FwHlq0iCIKVs2MPIIDnepZnYMa\", \"isSaasApplication\": true, \"appOwner\": \"admin\", \"jsonString\": \"{\\\"grant_types\\\":\\\"client_credentials password refresh_token\\\",\\\"redirect_uris\\\":\\\"www.google.lk\\\",\\\"client_name\\\":\\\"rest_api123\\\"}\", \"jsonAppAttribute\": \"{}\", \"tokenType\": null } ``` Next you must use the above client id and secret to obtain the access token. We will be using the password grant type for this, you can use any grant type you desire. You also need to add the proper **scope** when getting the access token. All possible scopes for publisher REST API can be viewed in **OAuth2 Security** section of this document and scope for each resource is given in **authorization** section of resource documentation. Following is the format of the request if you are using the password grant type. ``` curl -k -d \"grant_type=password&username=<admin_username>&password=<admin_passowrd&scope=<scopes seperated by space>\" \\ -H \"Authorization: Basic base64(cliet_id:client_secret)\" \\ https://<host>:<gateway_port>/token ``` **Sample request** ``` curl https://localhost:8243/token -k \\ -H \"Authorization: Basic Zk9DaTR2Tko1OVBwSHVjQzJDQVlmWXVBRGRNYTphNEZ3SGxxMGlDSUtWczJNUElJRG5lcFpuWU1h\" \\ -d \"grant_type=password&username=admin&password=admin&scope=apim:api_view apim:api_create\" ``` Shown below is a sample response to the above request. ``` { \"access_token\": \"e79bda48-3406-3178-acce-f6e4dbdcbb12\", \"refresh_token\": \"a757795d-e69f-38b8-bd85-9aded677a97c\", \"scope\": \"apim:api_create apim:api_view\", \"token_type\": \"Bearer\", \"expires_in\": 3600 } ``` Now you have a valid access token, which you can use to invoke an API. Navigate through the API descriptions to find the required API, obtain an access token as described above and invoke the API with the authentication header. If you use a different authentication mechanism, this process may change.  # Try out in Postman If you want to try-out the embedded postman collection with \"Run in Postman\" option, please follow the guidelines listed below. * All of the OAuth2 secured endpoints have been configured with an Authorization Bearer header with a parameterized access token. Before invoking any REST API resource make sure you run the `Register DCR Application` and `Generate Access Token` requests to fetch an access token with all required scopes. * Make sure you have an API Manager instance up and running. * Update the `basepath` parameter to match the hostname and port of the APIM instance.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/a09044034b5c3c1b01a9) 
 *
 * API version: v1.1
 * Contact: architecture@wso2.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// APIInfo struct for APIInfo
type APIInfo struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Context *string `json:"context,omitempty"`
	Version *string `json:"version,omitempty"`
	// If the provider value is not given, the user invoking the API will be used as the provider. 
	Provider *string `json:"provider,omitempty"`
	Type *string `json:"type,omitempty"`
	LifeCycleStatus *string `json:"lifeCycleStatus,omitempty"`
	WorkflowStatus *string `json:"workflowStatus,omitempty"`
	HasThumbnail *bool `json:"hasThumbnail,omitempty"`
	SecurityScheme *[]string `json:"securityScheme,omitempty"`
}

// NewAPIInfo instantiates a new APIInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIInfo() *APIInfo {
	this := APIInfo{}
	return &this
}

// NewAPIInfoWithDefaults instantiates a new APIInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIInfoWithDefaults() *APIInfo {
	this := APIInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *APIInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *APIInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *APIInfo) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *APIInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *APIInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *APIInfo) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *APIInfo) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *APIInfo) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *APIInfo) SetDescription(v string) {
	o.Description = &v
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *APIInfo) GetContext() string {
	if o == nil || o.Context == nil {
		var ret string
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIInfo) GetContextOk() (*string, bool) {
	if o == nil || o.Context == nil {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *APIInfo) HasContext() bool {
	if o != nil && o.Context != nil {
		return true
	}

	return false
}

// SetContext gets a reference to the given string and assigns it to the Context field.
func (o *APIInfo) SetContext(v string) {
	o.Context = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *APIInfo) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIInfo) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *APIInfo) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *APIInfo) SetVersion(v string) {
	o.Version = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *APIInfo) GetProvider() string {
	if o == nil || o.Provider == nil {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIInfo) GetProviderOk() (*string, bool) {
	if o == nil || o.Provider == nil {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *APIInfo) HasProvider() bool {
	if o != nil && o.Provider != nil {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *APIInfo) SetProvider(v string) {
	o.Provider = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *APIInfo) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIInfo) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *APIInfo) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *APIInfo) SetType(v string) {
	o.Type = &v
}

// GetLifeCycleStatus returns the LifeCycleStatus field value if set, zero value otherwise.
func (o *APIInfo) GetLifeCycleStatus() string {
	if o == nil || o.LifeCycleStatus == nil {
		var ret string
		return ret
	}
	return *o.LifeCycleStatus
}

// GetLifeCycleStatusOk returns a tuple with the LifeCycleStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIInfo) GetLifeCycleStatusOk() (*string, bool) {
	if o == nil || o.LifeCycleStatus == nil {
		return nil, false
	}
	return o.LifeCycleStatus, true
}

// HasLifeCycleStatus returns a boolean if a field has been set.
func (o *APIInfo) HasLifeCycleStatus() bool {
	if o != nil && o.LifeCycleStatus != nil {
		return true
	}

	return false
}

// SetLifeCycleStatus gets a reference to the given string and assigns it to the LifeCycleStatus field.
func (o *APIInfo) SetLifeCycleStatus(v string) {
	o.LifeCycleStatus = &v
}

// GetWorkflowStatus returns the WorkflowStatus field value if set, zero value otherwise.
func (o *APIInfo) GetWorkflowStatus() string {
	if o == nil || o.WorkflowStatus == nil {
		var ret string
		return ret
	}
	return *o.WorkflowStatus
}

// GetWorkflowStatusOk returns a tuple with the WorkflowStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIInfo) GetWorkflowStatusOk() (*string, bool) {
	if o == nil || o.WorkflowStatus == nil {
		return nil, false
	}
	return o.WorkflowStatus, true
}

// HasWorkflowStatus returns a boolean if a field has been set.
func (o *APIInfo) HasWorkflowStatus() bool {
	if o != nil && o.WorkflowStatus != nil {
		return true
	}

	return false
}

// SetWorkflowStatus gets a reference to the given string and assigns it to the WorkflowStatus field.
func (o *APIInfo) SetWorkflowStatus(v string) {
	o.WorkflowStatus = &v
}

// GetHasThumbnail returns the HasThumbnail field value if set, zero value otherwise.
func (o *APIInfo) GetHasThumbnail() bool {
	if o == nil || o.HasThumbnail == nil {
		var ret bool
		return ret
	}
	return *o.HasThumbnail
}

// GetHasThumbnailOk returns a tuple with the HasThumbnail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIInfo) GetHasThumbnailOk() (*bool, bool) {
	if o == nil || o.HasThumbnail == nil {
		return nil, false
	}
	return o.HasThumbnail, true
}

// HasHasThumbnail returns a boolean if a field has been set.
func (o *APIInfo) HasHasThumbnail() bool {
	if o != nil && o.HasThumbnail != nil {
		return true
	}

	return false
}

// SetHasThumbnail gets a reference to the given bool and assigns it to the HasThumbnail field.
func (o *APIInfo) SetHasThumbnail(v bool) {
	o.HasThumbnail = &v
}

// GetSecurityScheme returns the SecurityScheme field value if set, zero value otherwise.
func (o *APIInfo) GetSecurityScheme() []string {
	if o == nil || o.SecurityScheme == nil {
		var ret []string
		return ret
	}
	return *o.SecurityScheme
}

// GetSecuritySchemeOk returns a tuple with the SecurityScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIInfo) GetSecuritySchemeOk() (*[]string, bool) {
	if o == nil || o.SecurityScheme == nil {
		return nil, false
	}
	return o.SecurityScheme, true
}

// HasSecurityScheme returns a boolean if a field has been set.
func (o *APIInfo) HasSecurityScheme() bool {
	if o != nil && o.SecurityScheme != nil {
		return true
	}

	return false
}

// SetSecurityScheme gets a reference to the given []string and assigns it to the SecurityScheme field.
func (o *APIInfo) SetSecurityScheme(v []string) {
	o.SecurityScheme = &v
}

func (o APIInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Context != nil {
		toSerialize["context"] = o.Context
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.Provider != nil {
		toSerialize["provider"] = o.Provider
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.LifeCycleStatus != nil {
		toSerialize["lifeCycleStatus"] = o.LifeCycleStatus
	}
	if o.WorkflowStatus != nil {
		toSerialize["workflowStatus"] = o.WorkflowStatus
	}
	if o.HasThumbnail != nil {
		toSerialize["hasThumbnail"] = o.HasThumbnail
	}
	if o.SecurityScheme != nil {
		toSerialize["securityScheme"] = o.SecurityScheme
	}
	return json.Marshal(toSerialize)
}

type NullableAPIInfo struct {
	value *APIInfo
	isSet bool
}

func (v NullableAPIInfo) Get() *APIInfo {
	return v.value
}

func (v *NullableAPIInfo) Set(val *APIInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIInfo(val *APIInfo) *NullableAPIInfo {
	return &NullableAPIInfo{value: val, isSet: true}
}

func (v NullableAPIInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


